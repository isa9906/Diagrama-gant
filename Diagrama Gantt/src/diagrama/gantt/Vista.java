/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diagrama.gantt;

import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import logica.ColaBloqueados;
import logica.ColaListos;
import logica.Nodo;

/**
 *
 * @author Victoria
 */
public class Vista extends javax.swing.JFrame {

    /**
     * Creates new form Vista
     */
   
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        jLabel1.setText("Diagrama de Gantt");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P", "TL", "Traf", "TC", "TF", "TR", "TE"
            }
        ));
        jTable1.setToolTipText("");
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P", "TL", "TR"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 259, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(160, 160, 160))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(419, 419, 419))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public Vista() {
        initComponents();
        
        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //new JScrollPane(jTable3, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        jTable3.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        DefaultTableModel modelo =(DefaultTableModel) jTable1.getModel();
        Nodo prueba1=null;
        Nodo prueba = new Nodo(1,0,0,0,0,0,0,prueba1);
         DefaultTableModel modelo3 = (DefaultTableModel) jTable3.getModel();
        for (int i=0;i<=70;i++){
           modelo3.addColumn(i);
            
        }
        //modelo.addRow(new Object[]{prueba.getNombre(),prueba.getTllegada(),prueba.getTrafaga(),prueba.getTcomienzo(),
        //prueba.getTfinal(),prueba.getTretorno(),prueba.getTespera()});
        ColaListos cola=new ColaListos();
        ColaBloqueados bloqueados= new ColaBloqueados(cola);
        cola.enqueue(1,0,3);
        cola.enqueue(2,0,2);
        cola.enqueue(3,0,2);
        Date comienzo=new Date();
        insertar(cola,comienzo);
        atender(cola);
        insertarbloqueado(bloqueados,comienzo);
        atenderbloqueados(bloqueados);
    }//GEN-LAST:event_jButton1ActionPerformed
    private int i=3;
    public  void insertar(ColaListos cola,Date comienzo) {
	TimerTask insertar = new TimerTask() {
	    public void run() {
               i++;
	        String turnoAtendido="";
	        //System.out.println("Insertando..."+ new Date());
	        cola.enqueue(i,diferenciasegundos(comienzo,new Date()),(int)((Math.random()*8)+1));
                //System.out.println(cola.Mostrar());
	     }
	    };
	    Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
	    long delay  = 2000L; //retraso del hilo
	    long period = 2000L; //período de retraso
	    timer.scheduleAtFixedRate(insertar, delay, period);
            
	}
    public  void insertarbloqueado(ColaBloqueados cola,Date comienzo) {
	TimerTask insertar = new TimerTask() {
	    public void run() {
               i++;
	        String turnoAtendido="";
	        //System.out.println("Insertando..."+ new Date());
     
	        Nodo aux=cola.enqueue(i,diferenciasegundos(comienzo,new Date()),(int)((Math.random()*8)+1));
                DefaultTableModel modelo2 = (DefaultTableModel) jTable2.getModel();
                modelo2.addRow(new Object[]{aux.getNombre(),aux.getTllegada(),aux.getTrafaga()});
                //System.out.println(cola.Mostrar());
	     }
	    };
            
	    Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
	    long delay  = 5000L; //retraso del hilo
	    long period = 5000L; //período de retraso
	    timer.scheduleAtFixedRate(insertar, delay, period);
           
	}
    
    
    public  void atender(ColaListos cola) {
        
        
        
	TimerTask atender = new TimerTask() {
	    public void run() {
                DefaultTableModel modelo =(DefaultTableModel) jTable1.getModel();
                Nodo aux=cola.dequeue();
                String cadena="";
                cadena+= aux.getNombre() +"\t\t"+aux.getTllegada()+"\t\t"+aux.getTrafaga()+"\t\t"+aux.getTcomienzo()+"\t\t"+aux.getTfinal()+"\t\t"+aux.getTretorno()+"\t\t"+aux.getTespera();
                System.out.println(cadena);
                modelo.addRow(new Object[]{aux.getNombre(),aux.getTllegada(),aux.getTrafaga(),aux.getTcomienzo(),
                aux.getTfinal(),aux.getTretorno(),aux.getTespera()});
                DefaultTableModel modelo3 =(DefaultTableModel) jTable3.getModel();
                modelo3.addRow(new Object[]{});
                
                
                int numFila= jTable3.getRowCount()-1;
                int inicio=aux.getTcomienzo()+1;
                int termina=aux.getTfinal();
                int i;
                int iespera=aux.getTllegada()+1;
                int fespera=aux.getTcomienzo();
                for (i=iespera;i<=fespera;i++){
                 jTable3.setValueAt("E", numFila,i); 
                }
                for (i=inicio;i<=termina;i++){
                 jTable3.setValueAt("X", numFila,i); 
                }
                jTable3.setDefaultRenderer(Object.class, new CambiarColor());
                jTable3.setValueAt(aux.getNombre(), numFila,0);
                
                //jTable3.setValueAt("X", numFila,termina);
            }
	    };
	    Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
	    long delay  = 4000L; //retraso del hilo
	    long period = 4000L; //período de retraso
	    timer.scheduleAtFixedRate(atender, delay, period);
	}
    public  void atenderbloqueados(ColaBloqueados cola) {
        
	TimerTask atender = new TimerTask() {
	    public void run() {
                Nodo aux=cola.dequeue();
                String cadena="";
                DefaultTableModel modelo2 = (DefaultTableModel) jTable2.getModel();
                if(!cola.estaVacia()){
                    modelo2.removeRow(0);
                }
                
                
                //actualizarbloqueados(cola);
                //cadena+= aux.getNombre() +"\t\t"+aux.getTllegada()+"\t\t"+aux.getTrafaga()+"\t\t"+aux.getTcomienzo()+"\t\t"+aux.getTfinal()+"\t\t"+aux.getTretorno()+"\t\t"+aux.getTespera();
                //System.out.println(cadena);
                
            }
	    };
	    Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
	    long delay  = 3000L; //retraso del hilo
	    long period = 3000L; //período de retraso
	    timer.scheduleAtFixedRate(atender, delay, period);
	}
    public int diferenciasegundos (Date fechacomienzo,Date fechaactual ){
        int diferencia= (int)((fechaactual.getTime()-fechacomienzo.getTime())/1000);
        return diferencia;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
